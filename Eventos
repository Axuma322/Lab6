class EventManager:
    def __init__(self):
        self.subscribers = {}  # Inicializa un diccionario para almacenar suscriptores de eventos.

    def subscribe(self, event, callback):
        # Añade un suscriptor (callback) para un tipo específico de evento.
        if event not in self.subscribers:
            self.subscribers[event] = []  # Si el evento no existe, crea una nueva lista de suscriptores.
        self.subscribers[event].append(callback)  # Añade el callback a la lista de suscriptores del evento.

    def unsubscribe(self, event, callback):
        # Elimina un suscriptor (callback) de un tipo específico de evento.
        if event in self.subscribers and callback in self.subscribers[event]:
            self.subscribers[event].remove(callback)  # Elimina el callback de la lista de suscriptores del evento.

    def notify(self, event, data=None):
        # Notifica a todos los suscriptores de un evento específico, pasando datos opcionales.
        if event in self.subscribers:
            for callback in self.subscribers[event]:
                callback(data)  # Invoca cada callback asociado con el evento.
